import plotly.graph_objects as go
import numpy as np
from scipy.interpolate import make_interp_spline

# Phi and Teta are arrays of different energy relative to the lowest energy at theta angle 0 and 180 degree 
Phi = np.array([7.089823149,7.040926168,6.905378293,6.706083904,6.473659364,6.239477239,6.030760359,5.868293607,5.766078609,5.731954425,5.76834559,5.87258294,
6.036602374,6.246214509,6.48050684,6.71220647,6.909990081,7.043404854,7.089822877,7.040925624,6.905377749,6.706083088,6.473658819,6.239476695,6.030760086,
5.868293334,5.766078336,5.731954425,5.76834559,5.872583212,6.036602374,6.246215054,6.480507657,6.712207013,6.909990353,7.043405399,7.089823149])
Teta = np.array([0.00001424155016,0.5024754637,1.371267709,2.505015452,3.732987293,4.841265165,5.639630226,6.034418115,6.041342872,5.731954425,5.177413576,4.430886232,
3.541040798,2.573096742,1.617926805,0.7841330461,0.1806138539,0.1010099857,0.00001424155016,0.5024751914,1.371267165,2.505014908,3.732987021,4.841264893,
5.639630226,6.034417843,6.0413426,5.731954425,5.177413848,4.430886776,3.54104107,2.573096742,1.617926533,0.7841325021,0.1806133099,0.1010099857,0.00001424155016])
Angle = np.array([0,10,20,30,40,50,60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360])


polar_trace2 = go.Scatterpolar(r=Phi/14.26, theta=Angle, mode='markers', marker=dict(color='blue', size=15)) # 14.26 is area of a unit cell
polar_trace3 = go.Scatterpolar(r=Phi/14.26, theta=Angle, mode='lines',line=dict(width=2), marker=dict(color='black', size=15))
cartesian_trace = go.Scatter( x=[0],  y=[0], mode='markers',  marker=dict(color='grey'))

batasplot=5
bp=0
batasplo=int(batasplot)
gr=16


layout = go.Layout(paper_bgcolor='rgba(0,0,0,0)',plot_bgcolor='rgba(0,0,0,0)',showlegend=False,
      font=dict(family='serif',size=45 ,color='black', ),# title=f'ΔE vs φ',
      polar=dict(bgcolor = "rgba(255, 255, 255, 0.2)",
      radialaxis=dict(
              visible=True,
              range=[0,0.6],
              #range=[-0.2,6.4],
              #tickvals=np.linspace(bp,batasplot,9),
              showticklabels=False,
              showline=False,     # Show axis line
              ticklen=0,
              tickmode='linear', tick0=0 ,  dtick=0.2,
              gridwidth=3,
              gridcolor='lightgrey'),
          angularaxis=dict(
              visible=True,
              direction='counterclockwise',
              rotation=0,
              #tick0 = 0.1, dtick = "L0.5",
              gridwidth=3,
              tickmode='linear', tick0=0 ,  dtick=30,
              linewidth=4,
              tickwidth=4,
              ticklen=10,
              gridcolor='lightgrey')),
       yaxis=dict(
          #range=[-1.2, 1.2],
           range=[-0.6,0.6],
           title=(f'ΔE ( μeV / u.c. )'),
           #title = ('ΔE (meV)'),
          anchor='free',
          position=0.17,
           #titlesize=25,
           #tickmode='linear', tick0=0 ,  dtick=0.6,
           #tickvals=[-100,-50,0,50,100],
           #ticktext=['100','50','0','50','100'],
           tickvals=[-0.6,-0.4,-0.2,0.0,0.2,0.4,0.6],
           ticktext=['600','400','200','0','200','400','600']
       #   ticklen=15,
       #   ticks='inside',
           zeroline=False,
           showline=True,
           linewidth=4,
           tickwidth=4,
           gridcolor= 'rgba(0,0,0,0)'),
          #yaxis=dict(visible=False),
           xaxis=dict(visible=False ),
           width=1000,
           height=1000)

  # Create the figure and add both traces
fig = go.Figure(layout=layout)
fig.add_trace(cartesian_trace)
fig.add_trace(polar_trace3)
fig.add_trace(polar_trace2)
fig.update_layout(template=None)
# Display the plot
fig.update_layout(width=1200, height=600)
fig.write_image("MAE_Phi.png")
fig.show()
